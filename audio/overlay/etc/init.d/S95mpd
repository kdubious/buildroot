#!/bin/sh
NAME=mpd
PIDFILE=/var/run/$NAME.pid
DAEMON=/usr/bin/$NAME

# Sanity checks
test -f /etc/mpd.conf || exit 0

pid_file_exists() {
    [ -f "$PIDFILE" ]
}

get_pid() {
    echo "$(cat "$PIDFILE")"
}

is_running() {
    PID="$(get_pid)"
    [ -d /proc/$PID ]
}

start() {
        printf "Starting $NAME: "
        # CONFIGURE PIDFILE IN CONFIG
        start-stop-daemon -S -q -b --exec $DAEMON -- $OPTS
        ## start-stop-daemon -S -v --exec /usr/bin/mpd -- /opt/mpd/mpd.conf

        case "$?" in
        0)
            sleep 1
            if pid_file_exists
            then
                echo "$NAME started (`get_pid`)"
            else
                echo "$NAME started, but we do not have a PID yet"
            fi
            exit 0
        ;;
        1)
            sleep 1
            if pid_file_exists
            then
                echo "$NAME seems to be running (`get_pid`)"
            else
                echo "$NAME seems to be running, but we do not have a PID yet"
            fi
            exit 0
        ;;
        2)
            echo "This is really strange [2]"
        ;;
        3)
            echo "ERROR: $NAME did not start"
        ;;
        *)
            echo "This is really strange [???]"
    esac
    exit 1
}

stop() {
        printf "Stopping mpd: "
        start-stop-daemon --stop --quiet --pidfile $PIDFILE \
                && echo "OK" || echo "FAIL"
}

status() {
    if pid_file_exists
    then
        if is_running
        then
            PID=$(get_pid)
            echo "$NAME is running with pid $PIDFILE : $(get_pid)"
        else
            echo "$NAME is stopped, but pid file exists"
        fi
    else
        echo "$NAME is stopped"
    fi
}

case "$1" in
        start)
                start
                ;;
        stop)
                stop
                ;;
        restart|reload)
                stop
                sleep 2
                start
                ;;
        status)
                status
                ;;
        *)
                echo "Usage: $0 {start|stop|restart}"
                exit 1
esac