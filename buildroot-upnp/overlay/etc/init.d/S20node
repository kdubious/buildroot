#!/bin/sh

APP_NAME="cambio"
#USER="root"
#GROUP="$USER"
NODE_ENV="production"
PORT="80"
APP_DIR="/www/server/server"
NODE_APP="server.js"
NODE_ENVIROMENT=production               # Node environment
KWARGS=""
CONFIG_DIR="$APP_DIR"
PID_DIR="/var/run"
PID_FILE="$PID_DIR/$APP_NAME.pid"
LOG_DIR="$APP_DIR/log"


#!/bin/sh

NAME=Cambio_NodeJS
PIDFILE=/var/run/$NAME.pid
LOGFILE=/var/log/$NAME.log
APP_DIR="/www/server/server"
NODE_APP="server.js"
DAEMON=$(which node)
DAEMON_ARGS="/www/server/server/server.js"

start() {
    export NODE_ENV=$NODE_ENVIROMENT
    printf "Starting $NAME: "
    start-stop-daemon -S -q -m -b -p $PIDFILE --exec $DAEMON -- $DAEMON_ARGS
    [ $? = 0 ] && echo "OK, started with pid $PIDFILE" || echo "FAIL"
}
stop() {
    printf "Stopping $NAME: "
    start-stop-daemon -K -q -p $PIDFILE
    [ $? = 0 ] && echo "OK" || echo "FAIL"
}
restart() {
    stop
    sleep 2
    start
}

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart|reload)
        restart
        ;;
  *)
        echo "Usage: $0 {start|stop|restart}"
        exit 1
esac

exit $?

#!/bin/sh

APP_NAME="app"
USER="root"
GROUP="$USER"
NODE_ENV="production"
PORT="3000"
APP_DIR="/var/www/example.com"
NODE_APP="app.js"
KWARGS=""
CONFIG_DIR="$APP_DIR"
PID_DIR="$APP_DIR/pid"
PID_FILE="$PID_DIR/$APP_NAME.pid"
LOG_DIR="$APP_DIR/log"
LOG_FILE="$LOG_DIR/$APP_NAME.log"
NODE_EXEC=$(which node)

start() {
    if pid_file_exists
    then
        if is_running
        then
            PID=$(get_pid)
            echo "$APP_NAME already running with pid $PID"
            exit 1
        else
            echo "$APP_NAME stopped, but pid file exists"
            if [ $FORCE_OP = true ]
            then
                echo "Forcing start anyways"
                remove_pid_file
                start_it
            fi
        fi
    else
        start_it
    fi
}
stop() {
    if pid_file_exists
    then
        if is_running
        then
            echo "Stopping $APP_NAME ..."
            stop_process
            remove_pid_file
            echo "$APP_NAME stopped"
        else
            echo "$APP_NAME already stopped, but pid file exists"
            if [ $FORCE_OP = true ]
            then
                echo "Forcing stop anyways ..."
                remove_pid_file
                echo "$APP_NAME stopped"
            else
                exit 1
            fi
        fi
    else
        echo "$APP_NAME already stopped, pid file does not exist"
        exit 1
    fi
}
status() {
    if pid_file_exists
    then
        if is_running
        then
            PID=$(get_pid)
            echo "$APP_NAME running with pid $PID"
        else
            echo "$APP_NAME stopped, but pid file exists"
        fi
    else
        echo "$APP_NAME stopped"
    fi
}
restart() {
      stop
      sleep 2
      start
}

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart|reload)
        restart
        ;;
  status)
        status
        ;;
  *)
        echo "Usage: $0 {start|stop|restart}"
        exit 1
esac

exit $?