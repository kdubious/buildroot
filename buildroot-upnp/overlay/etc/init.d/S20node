#!/bin/sh

APP_NAME="cambio"
#USER="root"
#GROUP="$USER"
NODE_ENV="production"
PORT="80"
APP_DIR="/www/server/server"
NODE_APP="server.js"
KWARGS=""
CONFIG_DIR="$APP_DIR"
PID_DIR="/var/run"
PID_FILE="$PID_DIR/$APP_NAME.pid"
LOG_DIR="$APP_DIR/log"
LOG_FILE="$LOG_DIR/$APP_NAME.log"
NODE_EXEC=$(which node)

pid_file_exists() {
    [ -f "$PID_FILE" ]
}

get_pid() {
    echo "$(cat "$PID_FILE")"
}

is_running() {
    PID="$(get_pid)"
    [ -d /proc/$PID ]
}

start_it() {
    mkdir -p "$PID_DIR"
    chown $USER:$GROUP "$PID_DIR"
    mkdir -p "$LOG_DIR"
    chown $USER:$GROUP "$LOG_DIR"

    echo "Starting $APP_NAME ..."
    echo "cd $APP_DIR
        if [ $? -ne 0 ]; then
          exit
        fi
        set -a
        PORT=$PORT
        NODE_ENV=$NODE_ENV
        NODE_CONFIG_DIR=$CONFIG_DIR
        $NODE_EXEC \"$APP_DIR\"/$NODE_APP $KWARGS &>> \"$LOG_FILE\" &
        echo \$! > $PID_FILE" | sudo -i -u $USER
    echo "$APP_NAME started with pid $(get_pid)"
}

stop_process() {
    PID=$(get_pid)
    echo "Killing process $PID"
    kill $PID
    wait $PID 2>/dev/null
}

remove_pid_file() {
    echo "Removing pid file"
    rm -f "$PID_FILE"
}

start() {
    if pid_file_exists
    then
        if is_running
        then
            PID=$(get_pid)
            echo "$APP_NAME already running with pid $PID"
            exit 1
        else
            echo "$APP_NAME stopped, but pid file exists"
            if [ $FORCE_OP = true ]
            then
                echo "Forcing start anyways"
                remove_pid_file
                start_it
            fi
        fi
    else
        start_it
    fi
}
stop() {
    if pid_file_exists
    then
        if is_running
        then
            echo "Stopping $APP_NAME ..."
            stop_process
            remove_pid_file
            echo "$APP_NAME stopped"
        else
            echo "$APP_NAME already stopped, but pid file exists"
            if [ $FORCE_OP = true ]
            then
                echo "Forcing stop anyways ..."
                remove_pid_file
                echo "$APP_NAME stopped"
            else
                exit 1
            fi
        fi
    else
        echo "$APP_NAME already stopped, pid file does not exist"
        exit 1
    fi
}
status() {
    if pid_file_exists
    then
        if is_running
        then
            PID=$(get_pid)
            echo "$APP_NAME running with pid $PID"
        else
            echo "$APP_NAME stopped, but pid file exists"
        fi
    else
        echo "$APP_NAME stopped"
    fi
}
restart() {
      stop
      sleep 2
      start
}

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart|reload)
        restart
        ;;
  status)
        status
        ;;
  *)
        echo "Usage: $0 {start|stop|restart}"
        exit 1
esac

exit $?